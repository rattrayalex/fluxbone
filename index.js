// Generated by CoffeeScript 1.7.1
(function() {
  module.exports = {
    ModelMixin: function(model_name, event_name, cb_name) {
      var eventCallbackName, mixin;
      if (event_name == null) {
        event_name = "all";
      }
      eventCallbackName = "_eventCallbacks_" + model_name + "_" + event_name + "_" + (cb_name || '');
      mixin = {
        componentDidMount: function() {
          return this.props[model_name].on(event_name, this[eventCallbackName], this);
        },
        componentWillUnmount: function() {
          return this.props[model_name].off(event_name, this[eventCallbackName], this);
        }
      };
      mixin[eventCallbackName] = function() {
        if ((cb_name != null) && (this[cb_name] != null)) {
          return this[cb_name]();
        } else {
          return this.forceUpdate();
        }
      };
      return mixin;
    },
    CollectionMixin: function(collection_name, event_name, cb_name) {
      var eventCallbackName, mixin;
      if (event_name == null) {
        event_name = "all";
      }
      eventCallbackName = "_eventCallbacks_" + collection_name + "_" + event_name + "_" + (cb_name || '');
      mixin = {
        componentDidMount: function() {
          return this.props[collection_name].on(event_name, this[eventCallbackName], this);
        },
        componentWillUnmount: function() {
          return this.props[collection_name].off(event_name, this[eventCallbackName], this);
        }
      };
      mixin[eventCallbackName] = function() {
        if ((cb_name != null) && (this[cb_name] != null)) {
          return this[cb_name]();
        } else {
          return this.forceUpdate();
        }
      };
      return mixin;
    }
  };

}).call(this);
